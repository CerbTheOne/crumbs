buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = "https://repo.spongepowered.org/maven" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath(group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "3.+", changing: true)
        classpath(group: "org.spongepowered", name: "mixingradle", version: "0.7-SNAPSHOT")
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "eclipse"
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.spongepowered.mixin"

version = project.version + "-forge"

minecraft {
    mappings(channel: "official", version: rootProject.architect.minecraft)
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=" + rootProject.mod_id + ".mixins.json"
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=" + rootProject.mod_id + ".mixins.json"
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "${rootProject.mod_id}.mixins.refmap.json"
}

repositories {
    jcenter()
    maven { url "https://files.minecraftforge.net/maven" }
    maven {
        name = "Progwml6 maven / JEI Maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "ModMaven / JEI Mirror"
        url = "https://modmaven.k-4u.nl"
    }
}

configurations {
    shadow
}

dependencies {
    minecraft("net.minecraftforge:forge:${rootProject.architect.minecraft}-${rootProject.forge_version}")

    if (rootProject.hasProperty('jei_version')) {
        compileOnly fg.deobf("mezz.jei:jei-${rootProject.minecraft_version}:${rootProject.jei_version}:api")
        runtimeOnly fg.deobf("mezz.jei:jei-${rootProject.minecraft_version}:${rootProject.jei_version}")
    }

    compile(project(path: ":common", configuration: "mcpGenerateMod")) {
        transitive = false
    }
    shadow(project(path: ":common", configuration: "mcp")) {
        transitive = false
    }
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadow]
    classifier null
}

jar {
    manifest {
        attributes([
                "Specification-Title": "crumbs",
                "Specification-Vendor": "dodogang",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"dodogang",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${archivesBaseName}.mixins.json"
                //"FMLAT": "src/main/resources/META-INF/accesstransformer.cfg"
        ])
    }
}

reobf {
    shadowJar {}
}